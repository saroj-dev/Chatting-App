{"version":3,"sources":["Context.js","firebase/Firebase.js","components/FotterComponent.jsx","components/MessageDisplayArea.jsx","img/logo.jpg","components/Header.jsx","components/UserDetails.jsx","components/ChattingBox.js","App.js","index.js"],"names":["Messages","createContext","ContextProvider","props","useState","user","setUserC","userLogo","setUserLogoC","message","setMessage","Provider","value","MESSAGE","USERNAME","USERLOGO","children","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","database","ref","FotterComponent","useContext","typeMessage","setTypeMessage","handleSubmit","e","preventDefault","split","join","dataToSend","id","Date","getTime","data","push","className","onSubmit","type","placeholder","onChange","target","onClick","MessageDisplayArea","useEffect","on","dataToGet","messageArray","messages","val","currentUser","output","el","last","length","map","index","alt","src","mapMessage","Header","LogoIcon","UserDetails","USER","SUSER","USERLOGOS","SUSERLOGOS","required","ChattingBox","console","log","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9175febf.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\r\nexport const Messages = createContext();\r\n\r\nexport const ContextProvider = (props) => {\r\n  const [user, setUserC] = useState(\"\");\r\n  const [userLogo, setUserLogoC] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  return (\r\n    <Messages.Provider\r\n      value={{\r\n        MESSAGE: [message, setMessage],\r\n        USERNAME: [user, setUserC],\r\n        USERLOGO: [userLogo, setUserLogoC],\r\n      }}\r\n    >\r\n      {props.children}\r\n    </Messages.Provider>\r\n  );\r\n};\r\n"," \r\nimport firebase from 'firebase';  \r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDYRbo_XtdQZl5dPIJCPlCKfuDj83Kkh6I\",\r\n    authDomain: \"chatting-app-a79c7.firebaseapp.com\",\r\n    databaseURL: \"https://chatting-app-a79c7.firebaseio.com\",\r\n    projectId: \"chatting-app-a79c7\",\r\n    storageBucket: \"chatting-app-a79c7.appspot.com\",\r\n    messagingSenderId: \"227548068880\",\r\n    appId: \"1:227548068880:web:ce82a025bc7bd74c355e95\",\r\n    measurementId: \"G-2W9EYC7P95\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  const db = firebase.database().ref(\"messages\");\r\n  \r\nexport {db} ; \r\n","import React, { useContext, useState } from \"react\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { Messages } from \"../Context\";\r\nimport { db } from \"../firebase/Firebase\";\r\n\r\nconst FotterComponent = () => { \r\n  \r\n  const { USERNAME, USERLOGO } = useContext(Messages);\r\n  const [ user ]  = USERNAME;\r\n  const [ userLogo ]  = USERLOGO;\r\n  const [typeMessage, setTypeMessage] = useState();\r\n  const generateId = () => {\r\n    var n = new Date().getTime();\r\n    return n;\r\n  };\r\n\r\n \r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (typeMessage === \"\" && typeMessage.split(\" \").join(\"\") === \"\") {\r\n      return;\r\n    } else {\r\n      const dataToSend = {\r\n        user,\r\n        id: generateId(),\r\n        data: typeMessage,\r\n        userLogo,\r\n      };\r\n      db.push(dataToSend);\r\n      setTypeMessage(\"\");\r\n    }\r\n  };\r\n\r\n  const handleType = (e) => {\r\n    setTypeMessage(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"fotter\">\r\n      <form className=\"typingContainer\" onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type a message\"\r\n          className=\"typingContainer__box\"\r\n          value={typeMessage}\r\n          onChange={handleType}\r\n        />\r\n        <SendIcon className=\"send__icon\" onClick={handleSubmit} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FotterComponent;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Messages } from \"../Context\";\r\nimport { db } from \"../firebase/Firebase\";\r\n\r\nconst MessageDisplayArea = () => {\r\n  const { MESSAGE, USERNAME } = useContext(Messages);\r\n  const [user] = USERNAME;\r\n  const [message, setMessage] = MESSAGE;\r\n\r\n  // Using a react hook to make the data load after\r\n  useEffect(() => {\r\n    db.on(\"value\", (dataToGet) => {\r\n      let messageArray = [];\r\n      const messages = dataToGet.val();\r\n      for (let id in messages) {\r\n        let data = messages[id];\r\n        messageArray.push(data);\r\n      }\r\n      let currentUser = \"\";\r\n      const output = [];\r\n      let el = \"\";\r\n      for (el of messageArray) {\r\n        if (el.user !== currentUser) {\r\n          output.push(el);\r\n          currentUser = el.user;\r\n        } else {\r\n          const last = output[output.length - 1];\r\n          if (typeof last.data === \"string\") {\r\n            last.data = [last.data];\r\n          }\r\n          last.data.push(el.data);\r\n        }\r\n      }\r\n      setMessage(output);\r\n    });\r\n  }, []);\r\n\r\n  const mapDataMessage = (e) => {\r\n    if (typeof e === \"string\") {\r\n      return (\r\n        <div className=\"message__row\">\r\n          <div className=\"message\">{e}</div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return(\r\n        e.map((mapMessage, index) => (\r\n          <div className=\"message__row\">\r\n          <div className=\"message\" key={index}>\r\n            {mapMessage}\r\n          </div>\r\n          </div>\r\n        ))\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"messageArea\">\r\n      {message\r\n        ? message.map((data, index) => (\r\n          <>\r\n            <div className={data.user === user ? \"user2\" : \"user1\"} key={index}>\r\n              {/* comparing if this is the repeated message of the user  */}\r\n              {/* checking the user to display the image at first or at last */}\r\n              {data.user === user ? (\r\n                \"\"\r\n              ) : (\r\n                <img alt=\"\" className=\"user__logo\" src={data.userLogo} />\r\n              )}\r\n              {/* rendering the message container with the message in it */}\r\n\r\n              <div className=\"message__container\">\r\n                <div className=\"rows\">\r\n                {mapDataMessage(data.data)}\r\n                </div>\r\n                <div className=\"userName\">\r\n                  {data.user}\r\n                </div>\r\n              </div>\r\n\r\n              {/* checking the user to display the image at first or at last */}\r\n                \r\n              {data.user === user ? (\r\n                <img alt=\"\" className=\"user__logo\" src={data.userLogo} />\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div> \r\n            </>\r\n          ))\r\n        : \"\"}\r\n \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageDisplayArea;\r\n","export default __webpack_public_path__ + \"static/media/logo.5aa5f462.jpg\";","import React from 'react';\r\nimport '../css/ChattingBox.css';\r\nimport LogoIcon from '../img/logo.jpg'\r\n \r\nfunction Header() {\r\n    return (\r\n      <>\r\n      <div className=\"header\">\r\n          <div className=\"logo\">\r\n              <div className=\"img_container\">\r\n                  <img src={LogoIcon} alt=\"Not Found\"/> \r\n              </div>\r\n              <div className=\"logo_name\">\r\n                  SR Boyz \r\n              </div>\r\n          </div>\r\n          <div className=\"active_status\">\r\n              Active People\r\n              <span>5</span>\r\n          </div>\r\n      </div>\r\n      </>  \r\n    );\r\n}\r\n\r\nexport default Header\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"../css/ChattingBox.css\";\r\nimport { Messages } from \"../Context\";\r\n\r\nfunction UserDetails() {\r\n  const { USERNAME, USERLOGO } = useContext(Messages);\r\n\r\n  const [USER, SUSER] = useState(\"\");\r\n  const [USERLOGOS, SUSERLOGOS] = useState(\"\");\r\n\r\n  const [user, setUserC] = USERNAME;\r\n  const [userLogo, setUserLogoC] = USERLOGO;\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setUserC(USER);\r\n    setUserLogoC(USERLOGOS);\r\n\r\n    SUSER(\"\");\r\n    SUSERLOGOS(\"\");\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"input_feild\">\r\n        <form onSubmit={handleSubmit}>\r\n          <h3>Enter Your Details</h3>\r\n          <input\r\n            type=\"text\"\r\n            value={USER}\r\n            placeholder=\"Enter Your Username\"\r\n            onChange={(e) => SUSER(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={USERLOGOS}\r\n            placeholder=\"Enter your profile URL\"\r\n            onChange={(e) => SUSERLOGOS(e.target.value)}\r\n            required\r\n          />\r\n          <input type=\"submit\" value=\"submit\" />\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserDetails;\r\n","import React, { useContext } from \"react\";\r\nimport FotterComponent from \"./FotterComponent\";\r\nimport MessageDisplayArea from \"./MessageDisplayArea\";\r\nimport \"../css/ChattingBox.css\";\r\nimport Header from \"./Header\";\r\nimport {Messages} from \"../Context\";\r\nimport UserDetails from \"./UserDetails\";\r\n\r\nconst ChattingBox = () => {\r\n    const { USERNAME, USERLOGO } = useContext(Messages);\r\n    const [ user ]  = USERNAME;\r\n    const [ userLogo ]  = USERLOGO;\r\n    console.log( userLogo)\r\n    console.log(user)\r\n  return (\r\n    <>\r\n      {(user === \"\" && userLogo === \"\") ? (\r\n        <div className=\"main__box\">\r\n          <UserDetails />\r\n        </div>\r\n      ) : (\r\n        <div className=\"main__box\">\r\n          <Header />\r\n          <MessageDisplayArea /> <FotterComponent />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChattingBox;\r\n","import \"./css/App.css\";\r\nimport ChattingBox from \"./components/ChattingBox\";\r\nimport  {ContextProvider}  from \"./Context\";\r\nfunction App() {\r\n  return (\r\n    <>\r\n    <div className=\"main__app__container\">\r\n      <ContextProvider> \r\n        <ChattingBox />\r\n    </ContextProvider>\r\n      </div>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}